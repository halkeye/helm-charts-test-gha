apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resurrectbot.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "resurrectbot.name" . }}
    helm.sh/chart: {{ include "resurrectbot.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "resurrectbot.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "resurrectbot.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.image.tag . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SLACK_BOT_TOKEN
              value: {{ .Values.resurrectbot.slack.bot_token | quote }}
            - name: SLACK_AUTH_TOKEN
              value: {{ .Values.resurrectbot.slack.auth_token | quote }}
            {{- if .Values.resurrectbot.slack.token }}
            - name: SLACK_TOKEN
              value: {{ .Values.resurrectbot.slack.token }}
            {{- end }}
            - name: FLASK_ENV
              value: prod
            - name: DATABASE_URL
              value: "{{ .Values.resurrectbot.database.type }}://{{ .Values.resurrectbot.database.username }}:{{ .Values.resurrectbot.database.password }}@{{ .Values.resurrectbot.database.hostname }}/{{ .Values.resurrectbot.database.name }}"
            {{- if .Values.resurrectbot.sentry }}
            - name: SENTRY_TOKEN
              value: {{ .Values.resurrectbot.sentry }}
            {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
